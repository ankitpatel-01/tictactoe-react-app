{"version":3,"sources":["components/Square.js","components/Board.js","components/History.js","components/StatusMessage.js","App.js","winnerLogic.js","index.js"],"names":["Square","value","onClick","isWinningSquares","type","className","Board","board","handleSquareClick","winningSquares","renderSquare","position","includes","History","history","moveTo","currentMove","map","_","index","StatusMessage","winner","current","noMovesLeft","every","val","isX","App","NEW_GAME","Array","fill","useState","setHistory","setCurrentMove","lines","i","length","a","b","c","calculateWinner","currentState","last","newBoard","square","pos","concat","style","fontWeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7786c60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = ({ value, onClick, isWinningSquares }) => {\r\n  return (\r\n    <button type=\"button\"\r\n      className={`square ${isWinningSquares ? 'winnnig' : ''} ${value === 'X' ? 'text-green' : 'text-orange'}`}\r\n      onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst Board = ({ board, handleSquareClick, winningSquares }) => {\r\n\r\n  const renderSquare = (position) => {\r\n\r\n    const isWinningSquares = winningSquares.includes(position);\r\n\r\n    return (\r\n      <Square value={board[position]} onClick={() => handleSquareClick(position)} isWinningSquares={isWinningSquares} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react'\r\n\r\nconst History = ({ history, moveTo, currentMove }) => {\r\n    return (\r\n        <div className=\"history-wrapper\">\r\n            <ul className=\"history\">\r\n                {\r\n                    history.map((_, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <button\r\n                                    className={`btn-move ${index === currentMove ? 'active' : ''}`}\r\n                                    type=\"button\" onClick={() => {\r\n                                        moveTo(index);\r\n                                    }\r\n                                    }>\r\n                                    {index === 0 ? \"Go to start\" : `Go to move ${index}`}\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History\r\n","import React from 'react'\r\n\r\nconst StatusMessage = ({ winner, current }) => {\r\n\r\n    const noMovesLeft = current.board.every((val) => val !== null);\r\n    return (\r\n        // <h2>\r\n        //     {winner && `Winner is ${winner}`}\r\n        //     {!winner && !noMoveLeft && `Next Player is ${current.isX ? 'X' : 'O'} `}\r\n        //     {noMoveLeft && !winner && \"Game Tied\" }\r\n        // </h2>\r\n        <div className=\"status-message\">\r\n            {winner && (\r\n                <>\r\n                    Winner is{' '}\r\n                    <span className={winner === 'X' ? 'text-green' : 'text-orange'}>\r\n                        {winner}\r\n                    </span>\r\n                </>\r\n            )}\r\n            {!winner && !noMovesLeft && (\r\n                <>\r\n                    Next player is{' '}\r\n                    <span className={current.isX ? 'text-green' : 'text-orange'}>\r\n                        {current.isX ? 'X' : 'O'}{' '}\r\n                    </span>\r\n                </>\r\n            )}\r\n            {!winner && noMovesLeft && (\r\n                <>\r\n                    <span className=\"text-green\">X</span> and{' '}\r\n                    <span className=\"text-orange\">O</span> tied\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusMessage;\r\n","import React, { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport History from \"./components/History\";\nimport StatusMessage from \"./components/StatusMessage\";\nimport \"./style/root.scss\";\nimport { calculateWinner } from \"./winnerLogic\";\n\nconst App = () => {\n\n  const NEW_GAME = [{ board: Array(9).fill(null), isX: true }];\n\n  const [history, setHistory] = useState(NEW_GAME);\n\n  const [currentMove, setCurrentMove] = useState(0);\n\n  const current = history[currentMove];\n\n  const { winner, winningSquares } = calculateWinner(current.board);\n\n  const handleSquareClick = (position) => {\n\n    if (current.board[position] || winner) {\n      return;\n    }\n\n    setHistory((currentState) => {\n\n      const last = currentState[currentState.length - 1];\n\n      const newBoard = last.board.map((square, pos) => {\n\n        if (pos === position) {\n          return last.isX ? 'X' : 'O';\n        }\n\n        return square;\n      });\n      return currentState.concat({ board: newBoard, isX: !last.isX });\n    });\n    setCurrentMove(currentState => currentState + 1);\n  };\n\n  const moveTo = (index) => {\n    setCurrentMove(index)\n  };\n\n  const startNewGame = () => {\n    setHistory(NEW_GAME);\n    setCurrentMove(0);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Tic <span className=\"text-green\">Tac</span> Toe</h1>\n      <StatusMessage winner={winner} current={current} />\n      <Board board={current.board} handleSquareClick={handleSquareClick} winningSquares={winningSquares} />\n      <button className={`btn-reset ${winner ? 'active' : ''}`} type=\"button\" onClick={startNewGame}>New Game</button>\n      <h2 style={{ fontWeight: 'normal' }}>Current game history</h2>\n      <History history={history} moveTo={moveTo} currentMove={currentMove} />\n      <div className=\"bg-balls\"> </div>\n    </div>\n  );\n};\n\nexport default App;\n","export function calculateWinner(board) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n      return (\r\n        {\r\n          winner: board[a],\r\n          winningSquares: [a, b, c]\r\n        }\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    {\r\n      winner: null,\r\n      winningSquares: []\r\n    }\r\n  );\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}